@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    @if (User.Identity.IsAuthenticated)
    {
        <h5>Welcome @ViewData["FullName"] </h5>
        <div>
            <h5 id="Balance">@ViewData["Balance"]</h5>
            <button id="increaseBalanceButton" class="btn btn-primary">Increase Balance</button>

            <div id="increaseBalanceContainer" style="display: none;">
                <input type="number" id="amountInput" placeholder="Enter amount" />
                <button id="submitIncreaseBalance" class="btn btn-success">Submit</button>
                <div id="invalidAmountMessage" style="color: red; display: none;"></div>
            </div>

            <div id="expensePartialContainer"></div>
        </div>

        <div class="charts-container">
            <div class="chart-container">
                <h2>numberOfExpensesByCategory</h2>
                <canvas id="numberOfExpensesByCategory" width="10" height="10"></canvas>
            </div>
        </div>
    }
    else
    {
        <p>Please log in to view your profile settings and manage your expenses.</p>
    }
</div>

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {
            $("#increaseBalanceButton").click(function () {
                console.log("Increase Balance button clicked");
                $("#increaseBalanceContainer").show();
            });

            $("#submitIncreaseBalance").click(function () {
                console.log("Submit Increase Balance button clicked");
                var amount = parseFloat($("#amountInput").val());

                if (!isNaN(amount) && amount > 0) {
                    console.log("Valid amount: " + amount);

                    $.post('@Url.Action("IncreaseBalance")', { amount: amount }, function () {
                        console.log("Increase Balance success");
                        // Update the balance dynamically
                        updateBalance();
                        // Clear the input field
                        $("#amountInput").val('');
                        // Hide the invalid amount message if shown
                        $("#invalidAmountMessage").hide();
                    });
                } else {
                    // Provide user feedback for invalid input on the page
                    $("#invalidAmountMessage").text("Please enter a valid positive amount.").show();
                }

            });

            function updateBalance() {
                // Retrieve the updated balance from the server and update the UI
                $.get('@Url.Action("Index", "Home")', function (data) {
                    $("#Balance").html($(data).find("#Balance").html());
                });
            }


            var departmentData = @Html.Raw(Json.Serialize(ViewBag.numberOfExpensesByCategory)) || [];
            var departmentLabels = departmentData.map(item => item.category);
            var departmentCounts = departmentData.map(item => item.count);
            console.log(departmentData);
            console.log("Labels:", departmentLabels);
            console.log("Counts:", departmentCounts);

            // Render Department Distribution Pie Chart
            var departmentCtx = document.getElementById('numberOfExpensesByCategory').getContext('2d');
            var departmentChart = new Chart(departmentCtx, {
                type: 'bar',
                data: {
                    labels: departmentLabels,
                    datasets: [{
                        label: 'Department Distribution',
                        data: departmentCounts,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(255, 206, 86, 0.5)',
                            'rgba(75, 192, 192, 0.5)',
                            'rgba(153, 102, 255, 0.5)',
                            'rgba(255, 159, 64, 0.5)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true
                }
            });
        });
    </script>
}
